{"version":3,"sources":["components/InputContent/index.js","components/Dialog/index.js","utils/index.js","history.js","services/axios.js","services/user-service.js","pages/LoginPage/SingInForm.js","pages/LoginPage/RegisterForm.js","assets/imgs/logo.png","assets/imgs/banner1.png","assets/imgs/banner2.png","assets/imgs/banner3.png","components/SlideLogin/index.js","pages/LoginPage/index.js","assets/imgs/icon-menu.svg","assets/imgs/store.svg","assets/imgs/list.svg","assets/imgs/logout.svg","components/Dashboard/index.js","services/mapbox-service.js","components/InputSearchLocation/index.js","assets/imgs/store-marker.svg","assets/imgs/icon-edit.svg","components/MarkerMap/index.js","services/establishment-service.js","pages/MapPage/index.js","pages/EstablishmentFormPage/index.js","assets/imgs/icon-trash.svg","components/TableEstablishments/index.js","pages/EstablishmentViewPage/index.js","routes.js","App.js","index.js"],"names":["InputContent","props","className","class","label","optional","children","Dialog","withReactContent","Swal","dialog","getTextMessage","message","_return","Array","isArray","push","title","confirm","Promise","resolve","close","isOk","fire","html","onClick","showCancelButton","showConfirmButton","info","this","UNAUTHORIZED","token","localStorage","setItem","getItem","history","createBrowserHistory","baseApi","axios","create","baseURL","process","interceptors","request","use","config","utils","security","headers","error","reject","response","undefined","status","data","post","get","SingInForm","useState","email","setEmail","password","setPassword","loading","setLoading","login","evt","a","preventDefault","userService","then","catch","e","onSubmit","type","required","onChange","target","value","disabled","RegisterForm","name","setName","SlideLogin","imgActive","setImgActive","items","useEffect","setTimeout","nextImg","src","banner1","style","display","alt","banner2","banner3","map","item","key","LoginPage","isSingIn","setSignIn","imgLogo","Dashboard","isOpenSidebar","setIsOpenSidebar","useHistory","location","useLocation","getEstablishments","icon","store","path","list","logout","toggleSidebar","logo","pathname","navigation","width","menu","search","InputSearchLocation","onSelect","onSearch","isOpenItems","setIsOpenItems","locations","setLocations","window","addEventListener","classList","ev","mapboxService","features","place_name","latitude","geometry","coordinates","longitude","placeholder","length","clickLocation","MarkerMap","isInfo","setIsInfo","storeMarker","closeButton","description","iconEdit","id","put","delete","MapPage","viewDefault","zoom","height","viewPort","setViewPort","setData","setSearch","mounted","setMounted","establishmentService","text","mapStyle","mapboxApiAccessToken","onViewportChange","EstablishmentFormPage","match","params","about","setAbout","setLocation","searchLocation","setSearchLocation","isMap","setIsMap","establishment","update","save","maxLength","rows","flex","view","TableEstablishments","header","onDelete","itemHeader","keyHeader","data-label","editEstablishment","iconTrash","EstablishmentViewPage","getAllEstablishments","deleteEstablishment","Routes","onEnter","alert","exact","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb192905.chunk.js","sourcesContent":["export default function InputContent(props){\r\n\r\n    return (<div className={`input-content ${props.class}`} >\r\n        <label className='label'>{props.label} <span className='optional'>{props.optional ? ' - Opcional': ''}</span></label>\r\n        <div className='d-flex'>\r\n            {props.children}\r\n        </div>\r\n    </div>);\r\n}\r\n","import Swal from 'sweetalert2'\r\nimport withReactContent from 'sweetalert2-react-content'\r\nimport './dialog.scss';\r\n\r\nconst Dialog = withReactContent(Swal)\r\n\r\n\r\nconst dialog =  {\r\n    getTextMessage(message) {\r\n        const getMessages = () => {\r\n            if (Array.isArray(message)) {\r\n                return message\r\n            } else if (typeof message === 'string') {\r\n                return [message];\r\n            }\r\n        };\r\n        let _return = [];\r\n        for (let message of getMessages()) {\r\n            _return.push(<div className=\"text-message\" key={message}>{message}</div>)\r\n        }\r\n        return <div>{_return}</div>;\r\n    },\r\n\r\n    async message({title, message, confirm}) {\r\n        return new Promise((resolve => {\r\n            const close = (isOk) => {\r\n                Swal.close();\r\n                if (isOk) {\r\n                    resolve(true);\r\n\r\n                } else {\r\n                    resolve(false)\r\n                }\r\n            };\r\n\r\n            const getButtons = () => {\r\n                if (confirm) {\r\n                    return <div>\r\n                        <button className=\"btn-ok\" onClick={() => close(true)}>OK</button>\r\n                        <button className=\"btn-cancel\" onClick={() => close(false)}>Cancelar</button>\r\n                    </div>;\r\n                } else {\r\n                    return <button className=\"btn-ok\" onClick={() => close(true)}>OK</button>;\r\n                }\r\n            }\r\n\r\n            Dialog.fire({\r\n                html: (\r\n                    <div className={`dialog-alert ${confirm ? ' confirm' : ''}`}>\r\n                        <div className=\"header\">\r\n                            <div className=\"title\">{title}</div>\r\n                            <div className=\"icon-close\" onClick={() => close(true)}>X</div>\r\n                        </div>\r\n                        <div className=\"body\">\r\n                            {this.getTextMessage(message)}\r\n                        </div>\r\n                        <div className=\"footer\">\r\n                            {getButtons()}\r\n                        </div>\r\n                    </div>\r\n                ),\r\n                showCancelButton: false,\r\n                showConfirmButton: false\r\n            });\r\n        }));\r\n    },\r\n    info({message}) {\r\n        return this.message({title: 'INFORMAÇÃO', message: message});\r\n    },\r\n    async confirm({message}) {\r\n        return await this.message({title: 'ATENÇÃO', message: message, confirm: true});\r\n\r\n    }\r\n};\r\nexport default dialog;\r\n","export default {\r\n    httpStatus:{\r\n        UNAUTHORIZED:401\r\n    },\r\n    setToken(token) {\r\n        localStorage.setItem('token',token)\r\n    },\r\n    getToken(){\r\n        return  localStorage.getItem('token')\r\n    }\r\n}\r\n","import { createBrowserHistory } from 'history';\r\n\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;\r\n","import axios from \"axios\";\r\nimport utils from '../utils';\r\nimport history from \"../history\";\r\n\r\nconst baseApi = axios.create({\r\n    baseURL:process.env.REACT_APP_URL_API\r\n});\r\n\r\nbaseApi.interceptors.request.use((config) => {\r\n    const token = utils.getToken();\r\n    if(!token && config.security){\r\n        history.push('/login');\r\n    }else if(config.security){\r\n        config.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n}, (error) => {\r\n    return Promise.reject(error);\r\n});\r\nbaseApi.interceptors.response.use((response) => {\r\n    return response;\r\n}, (error) => {\r\n\r\n    if(error.response === undefined || utils.httpStatus.UNAUTHORIZED === error.response.status){\r\n        utils.setToken('');\r\n        history.push('/login');\r\n        return '';\r\n    }\r\n    return Promise.reject(error);\r\n});\r\nexport default baseApi;\r\n","import axios from \"./axios\";\r\n\r\nexport default {\r\n    async register(data) {\r\n        return await axios.post('user/register', data);\r\n    },\r\n    async login(data) {\r\n        return await axios.post('user/login', data);\r\n    },\r\n    async info() {\r\n        return await axios.get('user/info', {security: true});\r\n    }\r\n}\r\n","import InputContent from \"../../components/InputContent\";\r\nimport React, {useState} from 'react';\r\nimport dialog from '../../components/Dialog';\r\nimport userService from '../../services/user-service';\r\nimport utils from '../../utils';\r\n\r\nexport function SingInForm(props) {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const login = async (evt) => {\r\n        evt.preventDefault();\r\n        if (!email || !password) {\r\n            return dialog.info({message: 'Preencha os campos corretamente.'});\r\n        }\r\n        setLoading(true);\r\n\r\n         userService.login({email, password}).then(response => {\r\n            utils.setToken(response.data.data);\r\n            props.history.push(\"/\");\r\n        }).catch(error => {\r\n            let message = 'Dados inválidos. Verifique.';\r\n            try {\r\n                error = error.response.data.error;\r\n                if (typeof error === 'string')\r\n                    message = error;\r\n            } catch (e) {\r\n            }\r\n            dialog.info({message});\r\n        });\r\n        setLoading(false);\r\n    };\r\n    return (<form onSubmit={login}>\r\n        <InputContent label='E-mail' class=' mb-default'>\r\n            <input className='input'\r\n                   type='email'\r\n                   required={true}\r\n                   onChange={evt => setEmail(evt.target.value)}/>\r\n        </InputContent>\r\n        <InputContent label=\"Senha\" class=' mb-default'>\r\n            <input className='input'\r\n                   type='password'\r\n                   required={true}\r\n                   onChange={evt => setPassword(evt.target.value)}/>\r\n        </InputContent>\r\n        <button\r\n            className='button primary mb-default'\r\n            disabled={loading}\r\n            type='submit'>\r\n            Entrar\r\n        </button>\r\n    </form>);\r\n}\r\n","import InputContent from \"../../components/InputContent\";\r\nimport userService from '../../services/user-service';\r\nimport React,{useState} from 'react';\r\nimport dialog from '../../components/Dialog';\r\n\r\nexport function RegisterForm() {\r\n\r\n    const [name,setName] = useState('');\r\n    const [email,setEmail] = useState('');\r\n    const [password,setPassword] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const create = async (evt) =>{\r\n        evt.preventDefault();\r\n        setLoading(true);\r\n        await userService.register({\r\n            name,email,password\r\n        }).then(data=>{\r\n            dialog.info({message:'Usuário cadastrado com sucesso.'});\r\n            setPassword('');\r\n            setName('')\r\n            setEmail('')\r\n        }).catch(error=>{\r\n            let message = 'Dados inválidos. Verifique.';\r\n            try{\r\n                error = error.response.data.error;\r\n                if(typeof error === 'string')\r\n                    message = error;\r\n            }catch (e){}\r\n            dialog.info({message});\r\n        });\r\n        setLoading(false);\r\n    };\r\n\r\n    return (<form onSubmit={create}>\r\n        <InputContent label='Nome' class='mb-default'>\r\n            <input className='input'\r\n                   value={name}\r\n                   required={true}\r\n                   onChange={evt => setName(evt.target.value)}/>\r\n        </InputContent>\r\n        <InputContent label='E-mail'\r\n                      class='mb-default'\r\n                    >\r\n            <input className='input'\r\n                   type='email'\r\n                   required={true}\r\n                   value={email}\r\n                   onChange={evt=> setEmail(evt.target.value)}\r\n            />\r\n        </InputContent>\r\n        <InputContent label='Senha'\r\n                      class='mb-default'\r\n                      >\r\n            <input className='input'\r\n                   type='password'\r\n                   required={true}\r\n                   value={password}\r\n                   onChange={evt => setPassword(evt.target.value)}/>\r\n        </InputContent>\r\n        <button className='button primary  mb-default'\r\n                disabled={loading}\r\n                type='submit'>\r\n            Criar Conta\r\n        </button>\r\n    </form>);\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.5befa5a9.png\";","export default __webpack_public_path__ + \"static/media/banner1.3ed6984c.png\";","export default __webpack_public_path__ + \"static/media/banner2.c5229dce.png\";","export default __webpack_public_path__ + \"static/media/banner3.116f5f9a.png\";","import React,{useState,useEffect} from 'react';\r\nimport banner1 from '../../assets/imgs/banner1.png'\r\nimport banner2 from '../../assets/imgs/banner2.png'\r\nimport banner3 from '../../assets/imgs/banner3.png'\r\n\r\nimport './slide-login.scss';\r\n\r\nexport function SlideLogin() {\r\n\r\n    const [imgActive,setImgActive] = useState(0)\r\n    let items = [...new Array(3)];\r\n\r\n    useEffect(()=>{\r\n        setTimeout(()=>{\r\n            let nextImg = imgActive+1;\r\n            if(nextImg === 3){\r\n                nextImg = 0;\r\n            }\r\n            setImgActive(nextImg);\r\n        },2000);\r\n    },[]);\r\n\r\n    return <div className='container-slide-login'>\r\n        <img src={banner1}\r\n             style={{display:imgActive === 0? 'block': 'none'}}\r\n             alt='Banner 1'/>\r\n        <img src={banner2}\r\n             style={{display:imgActive === 1? 'block': 'none'}}\r\n             alt='Banner 2'/>\r\n        <img src={banner3}\r\n             style={{display:imgActive === 2? 'block': 'none'}}\r\n             alt='Banner 3'/>\r\n        <div className='controls'>\r\n            {items.map((item,key)=>(\r\n                <div key={key}\r\n                     className={`control ${imgActive === key?'active':''}`}\r\n                     onClick={()=>setImgActive(key)}>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    </div>\r\n}\r\n","import './login-page.scss'\r\nimport React, {useState} from 'react';\r\nimport {SingInForm} from \"./SingInForm\";\r\nimport {RegisterForm} from \"./RegisterForm\";\r\nimport imgLogo from '../../assets/imgs/logo.png';\r\nimport {SlideLogin} from \"../../components/SlideLogin\";\r\nimport utils from '../../utils';\r\n\r\nexport function LoginPage(props) {\r\n    const [isSingIn, setSignIn] = useState(true)\r\n    const label = isSingIn ? 'Criar Conta' : 'Login';\r\n    const token = utils.getToken();\r\n    if(token  !== '' && token != null){\r\n        props.history.push('/');\r\n    }\r\n\r\n    return (<div className='container-login'>\r\n        <div className='form-login-container shadow'>\r\n            <div className='left'>\r\n                <SlideLogin/>\r\n                <button className='button secondary'\r\n                        onClick={() => setSignIn(!isSingIn)}>\r\n                    {label}\r\n                </button>\r\n            </div>\r\n            <div className='right'>\r\n                <img src={imgLogo} className='mb-default logo-login' alt='Logo'/>\r\n                {isSingIn ? <SingInForm history={props.history}/> : <RegisterForm history={props.history}/>}\r\n                <div onClick={() => setSignIn(!isSingIn)}\r\n                     className='link primary text-center mobile-show'>\r\n                    {label}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>);\r\n}\r\n","export default __webpack_public_path__ + \"static/media/icon-menu.5018293c.svg\";","export default __webpack_public_path__ + \"static/media/store.06e18e0c.svg\";","export default __webpack_public_path__ + \"static/media/list.5ce416d6.svg\";","export default __webpack_public_path__ + \"static/media/logout.fe09cb54.svg\";","import './dashboard.scss';\r\nimport menu from './../../assets/imgs/icon-menu.svg';\r\nimport logo from './../../assets/imgs/logo.png';\r\nimport store from \"../../assets/imgs/store.svg\";\r\nimport list from \"../../assets/imgs/list.svg\";\r\nimport logout from \"../../assets/imgs/logout.svg\";\r\nimport utils from '../../utils';\r\nimport React, {useState, useEffect} from 'react';\r\nimport {useHistory, useLocation} from \"react-router-dom\";\r\nimport userService from '../../services/user-service';\r\n\r\nexport default function Dashboard(props) {\r\n    const [isOpenSidebar, setIsOpenSidebar] = useState(false);\r\n    const [email, setEmail] = useState('');\r\n    const [name, setName] = useState('');\r\n\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    useEffect(() => {\r\n        const getEstablishments = async () =>{\r\n            const response = await userService.info();\r\n            if(response.data){\r\n                const info = response.data.data;\r\n                setEmail(info.email);\r\n                setName(info.name);\r\n            }\r\n        };\r\n        getEstablishments();\r\n\r\n        return () =>{\r\n            setEmail('');\r\n            setName('');\r\n        }\r\n    }, []);\r\n\r\n    let items = [\r\n        {\r\n            label: 'Home',\r\n            icon: store,\r\n            path: '/'\r\n        },\r\n        {\r\n            label: 'Novo Estabelecimento',\r\n            icon: store,\r\n            path: '/estabelecimento'\r\n        },\r\n        {\r\n            label: 'Estabelecimentos',\r\n            icon: list,\r\n            path: '/estabelecimentos'\r\n        },\r\n        {\r\n            label: 'Sair',\r\n            icon: logout,\r\n            path: null\r\n        }\r\n    ];\r\n\r\n    const toggleSidebar = () => {\r\n        setIsOpenSidebar(!isOpenSidebar);\r\n    };\r\n\r\n    const navigation = (item) => {\r\n        if(!item.path){\r\n            utils.setToken('');\r\n            history.push('/login');\r\n            return;\r\n        }\r\n        history.push(item.path);\r\n    };\r\n\r\n\r\n    return (<div className='container-dashboard'>\r\n        <div className={isOpenSidebar ? 'bg-sidebar' : ''} onClick={toggleSidebar}/>\r\n        <div className={`container-sidebar shadow ${isOpenSidebar ? 'open-sidebar' : ''}`}>\r\n            <img src={logo} className='logo-sidebar' alt='Logo'/>\r\n            <div className='message mb-default'>Seja bem vindo</div>\r\n            <div className='dashboard-info'>{name}</div>\r\n            <div className='dashboard-info'>{email}</div>\r\n            <div className='items'>\r\n                {\r\n                    items.map((item, key) => (\r\n                        <div className={`item ${location.pathname === item.path ? 'active' : ''}`}\r\n                             key={key}\r\n                             onClick={() => navigation(item)}>\r\n                            <img src={item.icon} width={20} alt={item.label}/>\r\n                            <div className='label'>{item.label}</div>\r\n                        </div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n        <div className='content'>\r\n            <div className='navbar mobile-show shadow'>\r\n                <img src={logo} className='logo-navbar' alt='Logo Navbar'/>\r\n                <img src={menu} className='toggle' alt='Abrir menu' onClick={toggleSidebar}/>\r\n            </div>\r\n            <div className='content-main '>\r\n                {props.children}\r\n            </div>\r\n        </div>\r\n    </div>);\r\n}\r\n","import axios from 'axios';\r\n\r\n\r\nexport default {\r\n    async  searchLocation(search){\r\n        return await axios.get(`https://api.mapbox.com/geocoding/v5/mapbox.places/${search}.json?access_token=${process.env.REACT_APP_MAPBOX_TOKEN}`)\r\n    }\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport './input-search-location.scss';\r\nimport mapboxService from '../../services/mapbox-service';\r\n\r\nexport default function InputSearchLocation({onSelect, onSearch, search}) {\r\n\r\n    const [isOpenItems, setIsOpenItems] = useState(false)\r\n    const [locations, setLocations] = useState([])\r\n\r\n    useEffect(() => {\r\n        const listener = (evt) => {\r\n            let close = true;\r\n            for (let _class of evt.target.classList) {\r\n                if (_class === 'no-close') {\r\n                    close = false;\r\n                }\r\n            }\r\n            if (close) {\r\n                setIsOpenItems(false);\r\n            }\r\n        }\r\n        window.addEventListener('click', listener);\r\n    });\r\n\r\n    function clickLocation(location) {\r\n        onSearch(location.name);\r\n        setIsOpenItems(false);\r\n        if (onSelect) {\r\n            onSelect(location)\r\n        }\r\n    }\r\n\r\n    function change(ev) {\r\n        onSearch(ev.target.value);\r\n        mapboxService.searchLocation(search).then(response => {\r\n            setLocations(response.data.features.map(location => ({\r\n                name: location.place_name,\r\n                latitude: location.geometry.coordinates[1],\r\n                longitude: location.geometry.coordinates[0],\r\n            })))\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className=\"no-close container-input-search\">\r\n            <input className=\"input no-close\"\r\n                   onChange={change}\r\n                   value={search}\r\n                   onClick={() => setIsOpenItems(true)}\r\n                   placeholder='Pesquisar'/>\r\n            <div className=\"container-options no-close\">\r\n                {\r\n                    isOpenItems && locations.length > 0 ? <div className=\"content-options no-close\">\r\n                        {\r\n                            locations.map((location, key) => (\r\n                                <div key={key}\r\n                                     className=\"option no-close\"\r\n                                     onClick={() => clickLocation(location)}>\r\n                                    {location.name}\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div> : null\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/store-marker.7d2eab63.svg\";","export default __webpack_public_path__ + \"static/media/icon-edit.798705af.svg\";","import storeMarker from \"../../assets/imgs/store-marker.svg\";\r\nimport {Marker, Popup} from \"react-map-gl\";\r\nimport React, {useState} from 'react';\r\nimport './marker-map.scss';\r\nimport iconEdit from '../../assets/imgs/icon-edit.svg';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport function MarkerMap({location}) {\r\n    const [isInfo, setIsInfo] = useState(false);\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <div>\r\n            <Marker longitude={location.longitude} latitude={location.latitude}>\r\n                <img src={storeMarker}\r\n                     onClick={() => setIsInfo(!isInfo)}\r\n                     alt='Localização'\r\n                     className='img-marker'/>\r\n            </Marker>\r\n            {\r\n                isInfo ?\r\n                    <Popup longitude={location.longitude} latitude={location.latitude} className={'popup-marker-map'}\r\n                           closeButton={false}>\r\n                        <div className='container-marker-map-info'>\r\n                            <div className='info'>\r\n                                <div className='label'>Nome</div>\r\n                                <div className='value'>{location.name}</div>\r\n                            </div>\r\n                            <div className='info'>\r\n                                <div className='label'>Endereço</div>\r\n                                <div className='value'>{location.description}</div>\r\n                            </div>\r\n                            <div className='options'>\r\n                                <img src={iconEdit}\r\n                                     alt='Editar localização'\r\n                                     onClick={() => history.push(`estabelecimento/${location.id}`)}/>\r\n                            </div>\r\n                        </div>\r\n                    </Popup> : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import axios from \"./axios\";\r\n\r\nexport default {\r\n    async saveEstablishment(data){\r\n        return await axios.post('establishments',data,{security:true});\r\n    },\r\n    async updateEstablishment(id,data){\r\n        return await axios.put(`establishments/${id}`,data,{security:true});\r\n    },\r\n    async getEstablishments(){\r\n        return await axios.get('establishments',{security:true});\r\n    },\r\n    async getEstablishmentsById(id){\r\n        return await axios.get(`establishments/${id}`,{security:true});\r\n    },\r\n    async deleteEstablishment(id){\r\n        return await axios.delete(`establishments/${id}`,{security:true});\r\n    }\r\n}\r\n","import ReactMalGl from \"react-map-gl\";\r\nimport React, {useState, useEffect} from \"react\";\r\nimport './map-page.scss';\r\nimport InputSearchLocation from \"../../components/InputSearchLocation\";\r\nimport {MarkerMap} from \"../../components/MarkerMap\";\r\nimport establishmentService from \"../../services/establishment-service\";\r\n\r\nexport default function MapPage() {\r\n    const viewDefault = {\r\n        latitude: -3.71839,\r\n        longitude: -38.5434,\r\n        zoom: 12,\r\n        width: '100%',\r\n        height: '100%'\r\n    };\r\n    const [viewPort, setViewPort] = useState(viewDefault);\r\n\r\n    const [data, setData] = useState([]);\r\n    const [search, setSearch] = useState('');\r\n    const [mounted, setMounted] = useState(false);\r\n\r\n    const getEstablishments = () => {\r\n        establishmentService.getEstablishments().then(response => {\r\n            if (response.data) {\r\n                setData(response.data.data);\r\n            }\r\n            setMounted(true);\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getEstablishments();\r\n        return () =>{\r\n            setData([]);\r\n            setViewPort(viewDefault);\r\n        }\r\n    }, [])\r\n\r\n\r\n    const onSelectLocation = (location) => {\r\n        setViewPort({...viewPort, latitude: location.latitude, longitude: location.longitude});\r\n    };\r\n\r\n\r\n    return (<div className='container-map'>\r\n            <div><InputSearchLocation\r\n                search={search}\r\n                onSearch={(text) => setSearch(text)}\r\n                onSelect={onSelectLocation}/></div>\r\n            <ReactMalGl {...viewPort}\r\n                        mapStyle={\"mapbox://styles/joaosantosdev/ckleh9hxc39w517ry2iaxt9rt\"}\r\n                        mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}\r\n                        onViewportChange={viewPort => {\r\n                           if(mounted){\r\n                               setViewPort(viewPort);\r\n                           }\r\n                        }}>\r\n                {\r\n                    data.map((location, key) => (\r\n                        <MarkerMap key={key} location={location}/>\r\n                    ))\r\n                }\r\n            </ReactMalGl>\r\n        </div>\r\n    )\r\n}\r\n","import './establishment-form-page.scss';\r\nimport InputContent from \"../../components/InputContent\";\r\nimport InputSearchLocation from \"../../components/InputSearchLocation\";\r\nimport React, {useState, useEffect} from 'react';\r\nimport dialog from '../../components/Dialog';\r\nimport establishmentService from '../../services/establishment-service';\r\nimport ReactMalGl from \"react-map-gl\";\r\nimport {MarkerMap} from \"../../components/MarkerMap\";\r\n\r\nexport default function EstablishmentFormPage(props) {\r\n    const id = props.match.params.id;\r\n\r\n    const [name, setName] = useState('');\r\n    const [about, setAbout] = useState('');\r\n    const [location, setLocation] = useState(null);\r\n    const [searchLocation, setSearchLocation] = useState('');\r\n    const [loading, setLoading] = useState(false);\r\n    const [isMap, setIsMap] = useState(false);\r\n    const [viewPort, setViewPort] = useState({\r\n        width: '100%',\r\n        height: '300px',\r\n        zoom: 15\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n            establishmentService.getEstablishmentsById(id).then(response => {\r\n                const establishment = response.data.data;\r\n                setName((establishment.name || ''));\r\n                setAbout((establishment.about || ''));\r\n                setSearchLocation((establishment.description || ''));\r\n                setLocation({\r\n                    latitude: establishment.latitude,\r\n                    longitude: establishment.longitude\r\n                });\r\n                setViewPort({\r\n                    ...viewPort,\r\n                    latitude: establishment.latitude,\r\n                    longitude: establishment.longitude\r\n                });\r\n            }).catch(error => {\r\n                dialog.info({message: 'Usuário não encontrado.'});\r\n                props.history.push('/estabelecimentos');\r\n            });\r\n        }\r\n    }, [])\r\n\r\n    const cleanForm = () => {\r\n        setName('');\r\n        setAbout('');\r\n        setSearchLocation('');\r\n        setLocation('');\r\n        setIsMap(false);\r\n    };\r\n\r\n    const deleteEstablishment = () => {\r\n        dialog.confirm({message: 'Deseja realmente excluir este estabelecimento?'}).then(response => {\r\n            if (response) {\r\n                establishmentService.deleteEstablishment(id).then(response => {\r\n                    dialog.info({message: 'Estabelecimento excluído com sucesso.'});\r\n                    props.history.push('/estabelecimentos');\r\n                }).catch(error => {\r\n                    dialog.info({message: 'Erro ao excluir o estabelecimento.'});\r\n                })\r\n            }\r\n        })\r\n    };\r\n\r\n    const update = async (data) => {\r\n        setLoading(true);\r\n        await establishmentService.updateEstablishment(id, data).then(response => {\r\n            dialog.info({message: 'Estabelecimento atualizado com sucesso.'});\r\n            props.history.push('/estabelecimentos');\r\n        }).catch(error => {\r\n            dialog.info({message: 'Erro ao salvar. Tente Novamente.'});\r\n        });\r\n        setLoading(false)\r\n    };\r\n\r\n    const save = async (evt) => {\r\n        evt.preventDefault();\r\n\r\n        if (!name || !location) {\r\n            return dialog.info({message: 'Preencha os campos corretamente.'});\r\n        }\r\n        const data = {\r\n            name,\r\n            description: location.name,\r\n            about,\r\n            latitude: location.latitude,\r\n            longitude: location.longitude\r\n        };\r\n\r\n        if (id)\r\n            return update(data);\r\n\r\n        setLoading(true);\r\n        await establishmentService.saveEstablishment(data).then(response => {\r\n            dialog.info({message: 'Estabelecimento criado com sucesso.'});\r\n            cleanForm();\r\n        }).catch(error => {\r\n            dialog.info({message: 'Dados Inválidos. Verifique.'});\r\n        });\r\n        setLoading(false);\r\n    };\r\n\r\n    const selectLocation = (location) => {\r\n        setLocation(location);\r\n        setViewPort({...viewPort, ...location});\r\n    };\r\n\r\n    const title = id ? 'Atualização de Estabelecimento' : 'Novo Estabelecimento';\r\n\r\n    return (<form onSubmit={save} className='container-establishment-form'>\r\n            <div className='content-white'>\r\n                <h1 className='title-page'>{title}</h1>\r\n                <div className='row'>\r\n                    <div className='column'>\r\n                        <InputContent label=\"Nome\" class='mb-default'>\r\n                            <input className='input'\r\n                                   onChange={evt => setName(evt.target.value)}\r\n                                   required={true}\r\n                                   value={name}\r\n                                   maxLength={100}/>\r\n                        </InputContent>\r\n                    </div>\r\n                    <div className='column'>\r\n                        <InputContent label=\"Endereço\"\r\n                                      class='mb-default'>\r\n                            <InputSearchLocation search={searchLocation}\r\n                                                 onSearch={(search) => setSearchLocation(search)}\r\n                                                 onSelect={selectLocation}/>\r\n                        </InputContent>\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='column'>\r\n                        <InputContent label=\"Sobre\"\r\n                                      optional={true}\r\n                                      class='mb-default'>\r\n                            <textarea className='input'\r\n                                      value={about}\r\n                                      onChange={evt => setAbout(evt.target.value)}\r\n                                      maxLength={300}\r\n                                      rows={2}/>\r\n                        </InputContent>\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='column' style={{width: 200, flex: 'unset'}}>\r\n                        <button className='button primary'\r\n                                disabled={loading}\r\n                                type='submit'\r\n                        >\r\n                            {loading ? 'Salvando...' : 'Salvar'}\r\n                        </button>\r\n                    </div>\r\n                    <div className='column' style={{width: 200, flex: 'unset'}}>\r\n                        {\r\n                            location ?\r\n                                <button className='button primary'\r\n                                        onClick={() => setIsMap(!isMap)}\r\n                                        type='button'>\r\n                                    Ver no mapa\r\n                                </button> : null\r\n                        }\r\n                    </div>\r\n                    <div className='column'>\r\n                        {\r\n                            id ?\r\n                                <button className='button danger'\r\n                                        disabled={loading}\r\n                                        onClick={() => deleteEstablishment()}\r\n                                        type='button'\r\n                                        style={{width: 200}}>\r\n                                    Excluir\r\n                                </button> : null\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <div className='column'>\r\n                        {isMap && location ? <div className='container-establishment-map'>\r\n                                <ReactMalGl {...viewPort}\r\n\r\n                                            onViewportChange={view => setViewPort(view)}\r\n                                            mapStyle={\"mapbox://styles/joaosantosdev/ckleh9hxc39w517ry2iaxt9rt\"}\r\n                                            mapboxApiAccessToken={process.env.REACT_APP_MAPBOX_TOKEN}>\r\n                                    <MarkerMap location={location}/>\r\n                                </ReactMalGl>\r\n                            </div>\r\n                            : null}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/icon-trash.1077557a.svg\";","import './table-establishments.scss';\r\nimport iconEdit from '../../assets/imgs/icon-edit.svg';\r\nimport iconTrash from '../../assets/imgs/icon-trash.svg';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport function TableEstablishments({data, header, onDelete}) {\r\n    const history = useHistory();\r\n\r\n    const editEstablishment = (item) => {\r\n        history.push(`/estabelecimento/${item.id}`);\r\n    };\r\n\r\n    return (\r\n        <div className='container-table-establishments'>\r\n            <table className='table'>\r\n                <thead>\r\n                <tr>\r\n                    {\r\n                        header.map((item, key) => (\r\n                            <th key={key}>{item.label}</th>\r\n                        ))\r\n                    }\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                    data.map((item, key) => (\r\n                        <tr key={key}>\r\n                            {\r\n                                header.map((itemHeader, keyHeader) => (\r\n                                    itemHeader.key ?\r\n                                        <td data-label={itemHeader.label} key={keyHeader}>{item[itemHeader.key]}</td>\r\n                                        : <td key={keyHeader} className='options'>\r\n                                            <img src={iconEdit} onClick={() => editEstablishment(item)}\r\n                                                 alt={`Atualizar Estabelecimento ${item.name}`}/>\r\n                                            <img src={iconTrash} onClick={() => onDelete(item.id)}\r\n                                                 alt={`Excluir Estabelecimento ${item.name}`}/>\r\n                                        </td>\r\n                                ))\r\n                            }\r\n                        </tr>\r\n                    ))\r\n                }\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n","import './establishment-view-page.scss';\r\nimport establishmentService from '../../services/establishment-service';\r\nimport React, {useState, useEffect} from 'react';\r\nimport {TableEstablishments} from \"../../components/TableEstablishments\";\r\nimport dialog from \"../../components/Dialog\";\r\n\r\nexport default function EstablishmentViewPage(props) {\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const header = [\r\n        {key: 'name', label: 'Nome'},\r\n        {key: 'description', label: 'Endereço'},\r\n        {key: null, label: 'Opções'},\r\n    ];\r\n    const getAllEstablishments =  () => {\r\n       establishmentService.getEstablishments().then(response=>{\r\n           if(response.data){\r\n               setData(response.data.data);\r\n           }\r\n        });\r\n\r\n    };\r\n    useEffect(() => {\r\n        getAllEstablishments();\r\n    }, []);\r\n\r\n    const deleteEstablishment = (id) => {\r\n        dialog.confirm({message: 'Deseja realmente excluir este estabelecimento?'}).then(response => {\r\n            if (response) {\r\n                establishmentService.deleteEstablishment(id).then(response => {\r\n                    dialog.info({message: 'Estabelecimento excluído com sucesso.'});\r\n                    getAllEstablishments();\r\n                }).catch(error => {\r\n                    dialog.info({message: 'Erro ao excluir o estabelecimento.'});\r\n                })\r\n            }\r\n        })\r\n    };\r\n\r\n    return (\r\n        <div className='container-establishment-view'>\r\n            <div className='content-white'>\r\n                <h1 className='title-page'>Estabelecimentos</h1>\r\n                <div className='row'>\r\n                    <div className='column'>\r\n                        <div className='w-100'>\r\n                            <TableEstablishments\r\n                                onDelete={(id) => deleteEstablishment(id)}\r\n                                header={header}\r\n                                data={data}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import {Switch, Route, Router} from 'react-router-dom';\r\nimport {LoginPage} from \"./pages/LoginPage\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport MapPage from \"./pages/MapPage\";\r\nimport EstablishmentFormPage from \"./pages/EstablishmentFormPage\";\r\nimport EstablishmentViewPage from \"./pages/EstablishmentViewPage\";\r\nimport React from 'react';\r\nimport history from \"./history\";\r\n\r\nexport default function Routes() {\r\n\r\n    return (\r\n        <Router history={history} >\r\n            <Switch>\r\n                <Route onEnter={() => {\r\n                    alert('as')\r\n                }} exact={true} path=\"/login\" component={LoginPage}/>\r\n                <Dashboard>\r\n                    <Route exact={true} path=\"/estabelecimento\" component={EstablishmentFormPage}/>\r\n                    <Route exact={true} path=\"/estabelecimento/:id\" component={EstablishmentFormPage}/>\r\n                    <Route exact={true} path=\"/estabelecimentos\" component={EstablishmentViewPage}/>\r\n                    <Route exact={true} path=\"/\" component={MapPage}/>\r\n                </Dashboard>\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n","import Routes from \"./routes\";\n\nfunction App() {\n  return (\n    <Routes/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './assets/scss/style.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n   <div className='container-main'>\n       <App/>\n   </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}